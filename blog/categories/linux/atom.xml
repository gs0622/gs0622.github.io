<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Harry's Graffiti]]></title>
  <link href="http://gs0622.github.io/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://gs0622.github.io/"/>
  <updated>2014-09-17T19:06:40+08:00</updated>
  <id>http://gs0622.github.io/</id>
  <author>
    <name><![CDATA[Harry Pan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Linux Performance Tools]]></title>
    <link href="http://gs0622.github.io/blog/2014/09/17/linux-performance-tools/"/>
    <updated>2014-09-17T18:27:04+08:00</updated>
    <id>http://gs0622.github.io/blog/2014/09/17/linux-performance-tools</id>
    <content type="html"><![CDATA[<p><a href="http://www.brendangregg.com/">Brendan Gregg</a> 於今年八月在<a href="http://events.linuxfoundation.org/events/linuxcon-north-america">LinuxCon</a>所給的演說，內容涵蓋high-level overview到常用基本指令可讓工程師知道如何分析系統效能瓶頸。</p>

<iframe src="//www.slideshare.net/slideshow/embed_code/38175637" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/brendangregg/linux-performance-tools" title="Linux Performance Tools" target="_blank">Linux Performance Tools</a> </strong> from <strong><a href="http://www.slideshare.net/brendangregg" target="_blank">brendangregg</a></strong> </div></p>

<p>讀者可從基本的uptime, top, ps, vmstat, mpstat, free，到進階練習strace/ltrace, tcpdump, netstat, nicstat, pidstat, iotop, slabtop &hellip;etc.</p>

<p>尤其開頭第二頁的big picture做得相當棒，可以當成cheat sheet
<img class="http <a" src="href="http://www.brendangregg.com/Perf/linux_observability_tools.png">http://www.brendangregg.com/Perf/linux_observability_tools.png</a>&#8221; width=&#8221;600&#8221; height=&#8221;500&#8221; title=&#8221;linux_observability_tools&#8221; ></p>

<p><strong>SIDE NOTE</strong>: 緣起於我想了解目前的build machine是CPU bound, memory bound, I/O bound, 我用了vmstat, top, free不斷的實驗與觀察，輾轉又發現這篇投影片。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Administration Notes]]></title>
    <link href="http://gs0622.github.io/blog/2014/09/10/linux-administration-notes/"/>
    <updated>2014-09-10T11:28:23+08:00</updated>
    <id>http://gs0622.github.io/blog/2014/09/10/linux-administration-notes</id>
    <content type="html"><![CDATA[<p>Here is a memo of Linux workstation administration FAQs</p>

<h2>Add new hard disk</h2>

<h4>Find new disk to setup</h4>

<pre><code>$ sudo fdisk -l
</code></pre>

<p><img src="/images/20140910_list_partition.png" width="600" height="500" title="find new disk to setup" ></p>

<h4>Create extend/logical partition</h4>

<pre><code>Command: n -&gt; e -&gt; enter (default) -&gt; enter (default)
</code></pre>

<p><img src="/images/20140910_ext_partition.png" width="600" height="500" title="create extended partition" ></p>

<pre><code>Command: n -&gt; l -&gt; enter (default) -&gt; enter (default)
</code></pre>

<p><img src="/images/20140910_logical_partition.png" width="600" height="500" title="create logical partition" ></p>

<h4>Exame then write partition table to disk</h4>

<pre><code>Command: p (print) -&gt; w (write)
</code></pre>

<p><img src="/images/20140910_write_table.png" width="600" height="500" title="exame then write partition table" ></p>

<h4>Format new disk to ext4</h4>

<pre><code>$ sudo mkfs.ext4 /dev/sdb5  # Notice! change sdb to sdX depend on your case
</code></pre>

<p><img src="/images/20140910_format_disk.png" width="600" height="500" title="exame partition table" ></p>

<h4>Mount new disk</h4>

<pre><code>$ mkdir -p /mydisk
$ chmod 777 /mydisk
$ mount -t ext4 /dev/sdb5 /mydisk
</code></pre>

<h4>Add disk into fstab by UUID</h4>

<pre><code>$ sudo blkid
$ sudo vim /etc/fstab   # add 128-bit UUID of /dev/sdb5 into last line
$ tail -n 1 /etc/fstab
UUID=a1cf9f6e-dxxxx-xxxx-xxxx-xxxxxxx1eccf /mydisk  ext4    errors=remount-ro   0   1
</code></pre>

<p><img src="/images/20140910_find_uuid.png" width="600" height="500" title="find uuid" ></p>

<h2>Evaluate disk I/O performance</h2>

<h4>read benchmark</h4>

<pre><code>$ sudo hdparm -Tt /dev/sdb
/dev/sdb:
 Timing cached reads:   30414 MB in  1.99 seconds = 15289.37 MB/sec
 Timing buffered disk reads: 1046 MB in  3.00 seconds = 348.23 MB/sec
$ sudo hdparm -Tt --direct /dev/sdb
/dev/sdb:
 Timing O_DIRECT cached reads:   996 MB in  2.00 seconds = 497.87 MB/sec
 Timing O_DIRECT disk reads: 1444 MB in  3.00 seconds = 480.71 MB/sec
</code></pre>

<p>The <strong>-T</strong> is for <strong>cached read test</strong> while <strong>-t</strong> is for <strong>buffered read</strong>.
Second example with <strong>&ndash;direct</strong> which means assigned O_DIRECT flag in test</p>

<h4>write benchmark</h4>

<pre><code>$ dd if=/dev/zero of=/tmp/output conv=fdatasync bs=4k count=1M; rm -f /tmp/outut
1048576+0 records in
1048576+0 records out
4294967296 bytes (4.3 GB) copied, 32.0625 s, 134 MB/s
$ dd if=/dev/zero of=/ssd/output conv=fdatasync bs=4k count=1M; rm -f /ssd/output
1048576+0 records in
1048576+0 records out
4294967296 bytes (4.3 GB) copied, 8.62645 s, 498 MB/s
</code></pre>

<p>First example I tested my system disk whick is 3.5&#8221; HDD, while second one I tested on SSD.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chromium OS Build Notes]]></title>
    <link href="http://gs0622.github.io/blog/2014/08/27/chromium-os-build-notes/"/>
    <updated>2014-08-27T20:01:09+08:00</updated>
    <id>http://gs0622.github.io/blog/2014/08/27/chromium-os-build-notes</id>
    <content type="html"><![CDATA[<p>Basically this is short notes about building Chromium OS (a.k.a Chrome OS), all refer to <a href="http://www.chromium.org/chromium-os/developer-guide">Chromium OS Developer Guide</a></p>

<h2>Environment</h2>

<pre><code>$ sudo apt-get install git-core gitk git-gui subversion curl
$ git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
$ export PATH=`pwd`/depot_tools:"$PATH"   # better to add it into .bashrc
</code></pre>

<h2>Source</h2>

<pre><code>$ mkdir -p chromiumos &amp;&amp; cd chromiumos
$ repo init -u https://chromium.googlesource.com/chromiumos/manifest.git --repo-url https://chromium.googlesource.com/external/repo.git
$ repo sync
</code></pre>

<h2>Build</h2>

<h4>enter chroot</h4>

<pre><code>$ ./chromite/bin/cros_sdk
</code></pre>

<h4>board select</h4>

<pre><code>$ export BOARD=x86-generic      # change board depend on your device, pick one from overlays
$ ./setup_board --board=${BOARD}
$ ./build_packages --board=${BOARD}
$ ./build_image --board=${BOARD} --noenable_rootfs_verification dev
</code></pre>

<h4>download</h4>

<pre><code>$ cros flash usb:// ${BOARD}/latest     # then boot your device by this USB key
</code></pre>

<h2>Clean</h2>

<pre><code>$ # delete chroot, do *NOT* use rm -rf chroot
$ cros_sdk --delete
</code></pre>

<p>TBD</p>
]]></content>
  </entry>
  
</feed>
